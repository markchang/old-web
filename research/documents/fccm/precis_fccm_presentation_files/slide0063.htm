<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:p="urn:schemas-microsoft-com:office:powerpoint"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=PowerPoint.Slide>
<meta name=Generator content="Microsoft PowerPoint 9">
<link id=Main-File rel=Main-File href="../precis_fccm_presentation.htm">
<link rel=Preview href=preview.wmf>
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
p\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
v\:textbox {display:none;}
</style>
<![endif]-->
<title>Precis: a design time precision analysis tool</title>
<meta name=Description content="19-May-02: Why precision analysis?">
<link rel=Stylesheet href="master04_stylesheet.css">
<![if !ppt]>
<style media=print>
<!--.sld
	{left:0px !important;
	width:6.0in !important;
	height:4.5in !important;
	font-size:107% !important;}
-->
</style>
<script src=script.js></script><script><!--
gId="slide0063.htm"
if( !IsNts() ) Redirect( "PPTSld", gId );
//-->
</script><!--[if vml]><script>g_vml = 1;
</script><![endif]--><script for=window event=onload><!--
if( !IsSldOrNts() ) return;
if( MakeNotesVis() ) return;
LoadSld( gId );
MakeSldVis(0);
//-->
</script><![endif]><o:shapelayout v:ext="edit">
 <o:idmap v:ext="edit" data="120"/>
</o:shapelayout>
</head>

<body lang=EN-US style='margin:0px;background-color:black'
onclick="DocumentOnClick()" onresize="_RSW()" onkeypress="_KPH()">

<div id=SlideObj class=sld style='position:absolute;top:0px;left:0px;
width:534px;height:400px;font-size:16px;background-color:white;clip:rect(0%, 101%, 101%, 0%);
visibility:hidden'><p:slide coordsize="720,540"
 colors="#FFFFFF,#000000,#808080,#000000,#00CC99,#3333CC,#CCCCFF,#B2B2B2"
 masterhref="master04.xml">
 <p:shaperange href="master04.xml#_x0000_s3073"/><![if !ppt]><p:shaperange
  href="master04.xml#_x0000_s3076"/><![if !vml]><img border=0
 v:shapes="_x0000_s3076,_x0000_s3077" src="master04_image093.gif"
 style='position:absolute;top:1.0%;left:.56%;width:99.25%;height:98.75%'><![endif]><p:shaperange
  href="master04.xml#_x0000_s3078"/>
 <div v:shape="_x0000_s3078" class=O>
 <div style='text-align:right;mso-char-wrap:0;mso-kinsoku-overflow:0;
 position:absolute;top:96.5%;left:80.14%;width:18.91%;height:3.0%'><span
 style='font-size:58%;color:blue;mso-field-code:meta16'>2</span><span
 style='font-size:58%;color:blue;mso-special-format:lastCR;display:none'>&#13;</span></div>
 </div>
 <![endif]><p:shaperange href="master04.xml#_x0000_m3074"/><v:shape id="_x0000_s121858"
  type="#_x0000_m3074" style='position:absolute;left:54pt;top:30pt;width:612pt;
  height:54pt' o:userdrawn="f">
  <v:fill o:detectmouseclick="f"/>
  <v:stroke o:forcedash="f"/>
  <o:lock v:ext="edit" text="f"/>
  <p:placeholder type="title"/></v:shape><p:shaperange
  href="master04.xml#_x0000_m3075"/><v:shape id="_x0000_s121859" type="#_x0000_m3075"
  style='position:absolute;left:54pt;top:102pt;width:612pt;height:378pt'
  o:userdrawn="f">
  <v:fill o:detectmouseclick="f"/>
  <v:stroke o:forcedash="f"/>
  <o:lock v:ext="edit" text="f"/>
  <p:placeholder type="body" position="1"/></v:shape>
 <div v:shape="_x0000_s121858" class=T style='position:absolute;top:6.75%;
 left:8.42%;width:83.14%;height:7.75%'>Why precision analysis?</div>
 <div v:shape="_x0000_s121859">
 <div class=B><span style='position:absolute;top:19.75%;left:12.17%;width:81.08%'><span
 style='font-weight:normal'><span style='mso-special-format:bullet;color:#CC0066;
 position:absolute;left:-4.61%'>•</span></span>We have an algorithm originally
 written for </span><span style='position:absolute;top:25.25%;left:12.17%;
 width:79.4%'>general purpose processors&#13;</span></div>
 <div class=B style='position:absolute;top:31.5%;left:8.42%;width:83.14%;
 height:5.25%'><span style='position:absolute;top:0%;left:4.5%;width:95.49%'><span
 style='font-weight:normal'><span style='mso-special-format:bullet;color:#CC0066;
 position:absolute;left:-4.71%'>•</span></span>Want to implement it in an
 FPGA&#13;</span></div>
 <div class=B style='position:absolute;top:38.0%;left:8.42%;width:83.14%;
 height:5.25%'><span style='position:absolute;top:0%;left:4.5%;width:95.49%'><span
 style='font-weight:normal;visibility:hidden'><span style='mso-special-format:
 bullet;color:#CC0066;position:absolute;left:-4.71%'>•</span></span>&#13;</span></div>
 <div class=B><span style='position:absolute;top:44.25%;left:12.17%;width:86.7%'><span
 style='font-weight:normal'><span style='mso-special-format:bullet;color:#CC0066;
 position:absolute;left:-4.31%'>•</span></span>Software languages use data
 types to specify </span><span style='position:absolute;top:49.75%;left:12.17%;
 width:79.4%'>precision&#13;</span></div>
 <div class=B1 style='position:absolute;top:55.75%;left:13.48%;width:78.08%;
 height:4.0%'><span style='position:absolute;top:0%;left:4.07%;width:96.16%'><span
 style='font-weight:normal'><span style='mso-special-format:bullet;color:#CC0066;
 position:absolute;left:-4.23%'>•</span></span>Not all bits in the data types
 are necessarily used&#13;</span></div>
 <div class=B style='position:absolute;top:60.75%;left:8.42%;width:83.14%;
 height:5.25%'><span style='position:absolute;top:0%;left:4.5%;width:95.49%'><span
 style='font-weight:normal'><span style='mso-special-format:bullet;color:#CC0066;
 position:absolute;left:-4.71%'>•</span></span>FPGAs can work at the single-bit
 level&#13;</span></div>
 <div class=B1 style='position:absolute;top:67.0%;left:13.48%;width:78.08%;
 height:4.0%'><span style='position:absolute;top:0%;left:4.07%;width:96.16%'><span
 style='font-weight:normal'><span style='mso-special-format:bullet;color:#CC0066;
 position:absolute;left:-4.23%'>•</span></span>Match data paths to the
 algorithm&#13;</span></div>
 <div class=B1 style='position:absolute;top:71.75%;left:13.48%;width:78.08%;
 height:4.0%'><span style='position:absolute;top:0%;left:4.07%;width:96.16%'><span
 style='font-weight:normal'><span style='mso-special-format:bullet;color:#CC0066;
 position:absolute;left:-4.23%'>•</span></span>Correctness&#13;</span></div>
 <div class=B1 style='position:absolute;top:76.5%;left:13.48%;width:78.08%;
 height:4.0%'><span style='position:absolute;top:0%;left:4.07%;width:96.16%'><span
 style='font-weight:normal'><span style='mso-special-format:bullet;color:#CC0066;
 position:absolute;left:-4.23%'>•</span></span>Optimality&#13;</span></div>
 <div class=B1 style='position:absolute;top:81.5%;left:13.48%;width:78.08%;
 height:4.0%'><span style='position:absolute;top:0%;left:4.07%;width:96.16%'><span
 style='font-weight:normal;visibility:hidden'><span style='mso-special-format:
 bullet;color:#CC0066;position:absolute;left:-4.23%'>•</span></span><span
 style='mso-special-format:lastCR;display:none'>&#13;</span></span></div>
 </div>
</p:slide></div>

<![if !ppt]>

<div id=NotesObj style='display:none'>

<table style='color:white' border=0 width="100%">
 <tr>
  <td width=5 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><font face="Times New Roman" size=3>What is
  precision analysis?</font><br>
  </td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><br>
  </td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><font face="Times New Roman" size=3>Many of us have
  had an algorithm that was originally conceived and implemented on a
  general-purpose processor and wanted to implement it on a reconfigurable
  architecture (FPGAs).</font><br>
  </td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><br>
  </td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><font face="Times New Roman" size=3>Many differences
  between specifying an algorithm for the GPP vs. the FPGA. In GPPs, generally
  precision analysis consists of choosing the proper data type for your
  variable to simultaneously conserve memory and eliminate overflow errors. The
  GPP itself operates at the word level, in memory (cache, main, registers, …),
  and at the ALU level (adders, multipliers, …)</font><br>
  </td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><br>
  </td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><font face="Times New Roman" size=3>One of the
  benefits of the FPGA is it’s ability to work at the bit level. We can, in the
  HDL, describe a datapath that, perhaps, more closely matches the requirements
  of the algorithm and data sets. Of course, for the “cup half empty” folks, we
  can look at this another way and say that to fit more onto an FPGA, we have
  to be frugal with the sizes of our operators (adders, multipliers, …), as
  just a few 64x64 multipliers will fill up a reasonably-sized FPGA really
  quickly. The more optimized we are with respect to the algorithm, the more
  logic we can fit into the FPGA.</font><br>
  </td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><br>
  </td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><font face="Times New Roman" size=3>So, we trim the
  data paths to gain optimality yet maintain correctness.</font><br>
  </td>
 </tr>
</table>

</div>

<![endif]>
</body>

</html>
